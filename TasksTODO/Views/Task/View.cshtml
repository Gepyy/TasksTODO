@model IEnumerable<TasksTODO.Models.TasksModel>

@{
    ViewData["Title"] = "View";
}

<h1>View</h1>

<p>
    <a asp-action="GetCreate">Create New</a>
</p>
<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.TaskID)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.TaskTheme)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Description)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.DeadLine)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.CheckComplete)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.TaskID)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.TaskTheme)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Description)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.DeadLine)
                </td>   
                <td>
                    @if (item.CheckComplete)
                    {
                        <button type="button" class="btn btn-success complete-button" data-task-id="@item.TaskID">  Complete  </button>
                    }
                    else
                    {
                        <button type="button" class="btn btn-warning complete-button" data-task-id="@item.TaskID">Not Complete</button>
                    }
                </td>
                <td>
                    @Html.ActionLink("Edit", "GetUpdate", new { id = item.TaskID }) |
                    @Html.ActionLink("Delete", "GetDelete", new { id = item.TaskID })
                </td>
            </tr>
        }
    </tbody>
</table>

<script>
    window.onload = function () {
        var buttons = document.querySelectorAll('.complete-button');
        buttons.forEach(button => {
            button.addEventListener('click', function () {
                toggleCompleteStatus(button);
            });
        });
    };

    function toggleCompleteStatus(button) {
        var taskId = button.dataset.taskId;
        var isComplete = button.classList.contains('btn-success');

        fetch(`/Task/${taskId}/complete`, {
            method: 'PUT',
            headers: {
                'Content-Type': 'application/json'
            },
            body: JSON.stringify({
                taskId: taskId,
                isComplete: !isComplete
            })
        })
            .then(response => {
                if (!response.ok) {
                    throw new Error(`HTTP error! Status: ${response.status}`);
                }
                return response.text();
            })
            .then(data => {
                button.innerText = isComplete ? 'Not Complete' : 'Complete';
                button.classList.toggle('btn-success');
                button.classList.toggle('btn-warning');
                var statusMessage = document.getElementById('status-' + taskId);
                statusMessage.innerHTML = data;
            })
            .catch(error => {
                console.error('Error:', error);
            });
    }
</script>

